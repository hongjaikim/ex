# 가변매개변수 : 함수명(매개변수,*가변매개변수명)
# 기본매개변수 : 함수명(매개변수, 기본매개변수=값)
# 기본 매개변수와 가변매개변수가 같이 오는 경우 : 가변, 기본 순서
# 일반 매개변수, 가변 매개변수, 키워드 매개변수(기본) 순서로

# 2. 함수의 활용 : 자기함수 호출: 재귀함수
# 메모화 : 메모변수 생성

# 3. 함수 고급 : tuple -> (), lambda 함수
# 람다 = lambda
# 함수의 매개변수로 함수명 전달

# map(함수명, 리스트) -> 리스트의 각각의 값을 함수에 적용
# filter(함수명, 리스트) -> 함수의 리턴값이 True인 자료만 추출

# lambda 매개변수 : 리턴 값
input_list = [1,2,3,4,5]
output = map(lambda x: x*x,input_list)

# 파일 처리 : open() , file.write() , file.close() , file.read()

# file open with 와 같이 사용 -> with 종료시 자동으로 파일 close 됨

import os
os.getcwd()               #현재 디렉토리의 전체 full 경로 보여줌

#제너레이터 함수 작성 : 함수 내부에 yield 키워드를 사용
def gen_test():
    print('first')
    yield 1
    
    print('second')
    yield 2
    
    print('third')
    yield 3

# 실행 오류 : try ~ except ~ else ~ finally
# 실행 오류가 발생할 수 있는 코드 작성

# 실행 오류가 발생할 수 있는 코드 작성
# try ~ except -> 기본
# try:
#     예외 발생 코드
# except:
#     예외 발생시 실행 코드
# else:
#     정상 작동시 실행 코드
    
