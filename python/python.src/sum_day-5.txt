# 함수의 데코레이터 사용
def test(func):
    def wrapper():
        print("start !!!")
        func()
        print("end !!!")
    return wrapper

# @데코레이션을 붙여 함수 생성
@test
def hello():
    print("hello !!!")

# 클래스 생성 class 클래스명:
class Student:                   #클래스 정의
    def __init__(self,name):
        self.name = name
#     def 함수명(self,...):
#         self.

# 클래스의 상속이 있는 경우 인스턴스가 어느 클래스인지 확인
# isinstance(인스턴스, 클래스) : type(인스턴스) == 클래스
# class 클래스명(클래스명_1) 클래스명_1의 내용을 상속받음

# class 변수 , 클래스 함수 @classmethod -> 함수 정의

