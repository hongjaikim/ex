# 딕셔너리에 값 추가 / 제거 하기 : 딕셔너리[키] = 값 / del 딕셔너리[키]

# 키가 존재하는지 확인 : key in 딕셔너리
# 키의 값이 존재하는지 확인하는 함수 : 딕셔너리.get(키) -> 값을 반환

# 딕셔너리의 키와 값을 동시에 가져오는 함수 : 딕셔너리.items()

# enmerate함수 인덱스와 값을 반환

# python 의 데이터 타입 : 문자, 숫자, 불리언
# 자료의 집합 : list -> [], 딕셔너리 -> {}
# list[인덱스], 딕셔너리[키]
# list.append(요소), dict[키] = 값
# list[인덱스] = 값, dict[키] = 값
# list.pop(), list.remove(값), del list[인덱스], del dict[키]

#반복문 for문과 같이 사용
# for value in list : -> 리스트의 각 요소가 value로 저장됨
# for key in dict : -> 딕셔너리의 키가 key로 저장됨

#for idx, value in enumerate(리스트) -> 위치(idx)와 값(value)이 저장됨
#for key, value in dict.items() -> 키(key)와 값(value)이 저장됨

#dict.get(키) -> 값이 반환됨

#while True: 조건일 경우 실행

# 반복문 탈출 키워드 -> break: 반복문 탈출, continue: 반복문 조건식으로 이동

#리스트 내포: 리스트 선언안에 for문장을 사용
# [표현식 for 반복자 in 반복할 수 있는 자료]

#문자열.split() => space로 분리
#리스트를 하나의 문자열로 전환
list_str

# 리스트를 하나의 문자열로 연결 문자를 '-'
join_str = '-'.join(list_str)
