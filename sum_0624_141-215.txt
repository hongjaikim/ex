# 문자열 관련 함수 : 문자열오브젝트.upper(), 오브젝트.lower()

#문자열의 공백 제거 : 문자열.strip() 양쪽의 공백 제거
# 문자열.lstrip(), 문자열.rstrip() 한쪽의 공백 제거

# 문자열 구성 파악 is--() pg143

#문자열 찾기 .find(), .rfind() 위치 반환
# find(문자열,시작위치,끝위치)

# 문자가 해당 문자열에 있는지 확인 : 문자 in 문자열

# 문자열.split('분리하고자 하는 문자') 공백은 생략 가능

# 3.6버전 이후 가능 : f'문자열(표현식)문자열'

CH 03 조건문
1. 불 자료형과 if조건문

# True, False, and, or, nao, ==, !=, >, <, >=, <=

# 날짜 / 시간 활용하기
# datetime 모듈
import datetime

now = datetime.datetime.now()
print('{}년 {}월 {}시 {}분 {}초'.format(now.year,now.month,now.day,now.minute,now.second))

CH 04 반복문
리스트와 반복문

# 리스트 선언하기 : [요소,..]

# 리스트의 요소 접근하는 방법 : 리스트[인덱스]

# 리스트 연산 +, *, len() -- 기존자료에 영향x

# 리스트 요소 추가 
# 리스트명.append(요소) : 뒤에 요소추가
# 리스트명.insert(위치, 요소) : 위치에 요소추가
# 리스트에 각 요소를 리스트에 추가 : 리스트명.extend(리스트)

# 리스트 제거 : 인덱스 제거 -> del 리스트명[인덱스],리스트.pop(인덱스)
# 마지막 요소 제거 : 리스트.pop() 

# 리스트의 인덱스 슬라이싱 : 리스트명[start : stop : step]

#리스트의 자료 제거 : del 리스트명[인덱스], 리스트명.pop(위치)
#리스트의 값으로 제거 : 리스트명.remove(값) -- 가장 먼저 나오는거 제거

#리스트의 내용을 모두 제거 : 리스트명.clear()

# 리스트의 자료를 추가 : append(요소), insert(위치, 요소), extend(리스트)
# 수정 : 리스트[위치] = 값
# 삭제 : del 리스트[위치], 리스트.pop(위치)
# 값으로 삭제 : 리스트.remove(값) : 처음 나오는 값을 제거
# 모든 요소 삭제 : 리스트.clear()
# 정렬 : 리스트.sort() / 역방향 리스트.sort(reverse = True)
# 값 in 리스트

# for 반복문 : 리스트와 함께 사용
# for 반복자 in 반복할 수 있는 모든 자료 :

#구구단 출력

list_99 = [2,3,4,5,6,7,8,9]
list_999 = [1,2,3,4,5,6,7,8,9]
cnt = 0
for num in list_99:
    print(f"{num}단")
    for num2 in list_999:
        if cnt<2 :
            print(f"{num} x {num2} = {num*num2}",end= "\t")
            cnt += 1
        else :
            print(f"{num} x {num2} = {num*num2}")
            cnt = 0
    print()



